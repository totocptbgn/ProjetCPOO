/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import static org.junit.Assert.*;

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.net.http.HttpResponse.BodyHandlers;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.AbstractMap.SimpleEntry;
import java.util.concurrent.CompletableFuture;

public class LibraryTest {
	@Test public void testSomeLibraryMethod() {
		Library classUnderTest = new Library();
		assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
	}

	public static CompletableFuture<Path> get(String uri) {
		HttpClient client = HttpClient.newHttpClient();
		HttpRequest request = HttpRequest.newBuilder()
				.uri(URI.create(uri))
				.build();

		return client.sendAsync(request, BodyHandlers.ofFile(Paths.get("body.txt")))
				.thenApply(HttpResponse::body);
	}

	public static void main(String[] args) throws Exception {
		System.out.println(Thread.currentThread().getName());
    	/*
    	CompletableFuture<Path> cf = get("https://openjdk.java.net/groups/net/httpclient/recipes.html");

    	System.out.print(cf.get());

    	//avoir une page
        Document doc = Jsoup.connect("http://en.wikipedia.org/").get();
        //System.out.println(doc);
        //doc : https://jsoup.org/apidocs/org/jsoup/select/Elements.html
        Elements newsHeadlines = doc.getAllElements();//doc.select("#mp-itn b a"); -> avoir element en particulier

        for (Element headline : newsHeadlines) {
        	if(/*headline.absUrl("href").contains("en.wikipedia")*\/headline.attr("href").contains(".css"))
        		System.out.println(headline.attr("href"));
        	/*
        	log("%s\n\t%s", headline.attr("title") //avoir le titre de la balise
            		, headline.absUrl("href") //avoir les liens des elements
            		);
            		*\/
        }
      */
        Gestionnaire g=new Gestionnaire();
    	g.addLauncher("https://www.irif.fr/~sighirea//cours/reseauxM/java.url.html");
    	for(Launcher l: g.list()) {
    		System.out.println(l.getNom()+" "+l.getSizeLeft()+" "+l.getEtat()+"\n");
    	}
    	g.launch();
    	long time = System.currentTimeMillis();
    	while(System.currentTimeMillis()-time<3000);
    	for(Launcher l: g.list()) {
    		System.out.println(l.getNom()+" "+l.getSizeLeft()+" "+l.getEtat()+"\n");
    	}
    	System.out.print("Do pause : "+g.pause()+"\n");
    	time = System.currentTimeMillis();

    	//while(System.currentTimeMillis()-time<2000);
    	for(Launcher l: g.list()) {
    		System.out.println(l.getNom()+" "+l.getSizeLeft()+" "+l.getEtat()+"\n");
    	}
    	System.out.print("Do restart : "+g.restart()+"\n");
    	time = System.currentTimeMillis();

    	while(System.currentTimeMillis()-time<5000);
    	for(Launcher l: g.list()) {
    		System.out.println(l.getNom()+" "+l.getSizeLeft()+" "+l.getEtat()+"\n");
    	}

    }
}
